<h1>About</h1>
<p>網頁: <a class="Link--inTextBlock" href="https://kaorusam.github.io/cd2024/">https://kaorusam.github.io/cd2024</a></p>
<p>網誌: <a href="https://kaorusam.github.io/cd2024/blog/">https://kaorusam.github.io/cd2024/blog</a></p>
<p>簡報: <a class="Link--inTextBlock" href="https://kaorusam.github.io/cd2024/reveal">https://kaorusam.github.io/cd2024/reveal</a></p>
<p>倉儲: <a href="https://github.com/kaoruSam/cd2024">https://github.com/kaoruSam/cd2024</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<h1>日記</h1>
<p>w4 我前幾次好像忘記save，前幾個禮拜的都不見了，只好從w4開始，希望老師不要介意。</p>
<p>w5 這週把翻譯的東西做完了，這學期會努力更上進度的。</p>
<p></p>
<h1>翻譯作業</h1>
<p></p>
<p>%開頭=<br/>\documentclass[12pt,a4paper]{report} %紙張設定<br/>\usepackage{xeCJK}%中文字體模組<br/>\usepackage{graphicx}%插入圖片套件<br/>\usepackage{tocbibind}%自動添加目錄和參考文獻到目錄中套件<br/>\usepackage{hyperref}%生成超連結模組</p>
<p>% 在 Windows 可以使用系統所安裝的字型<br/>\setCJKmainfont{標楷體}%設定中文字體<br/>\newfontfamily\sectionef{Times New Roman}%設定英文字體</p>
<p>\begin{document}<br/>\begin{center}%文字置中<br/>\large\textbf{3. CHAPTER}%字體加黑加粗<br/>\large\textbf{第3章}%字體加黑加粗<br/>\end{center}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{THE STATE OF THE ART AND THE INTEGRATION OF <br/>PLM AND MES}%字體加黑加粗<br/>\large\textbf{最新技術和PLM與MES的整合}%字體加黑加粗<br/>\end{center}\\</p>
<p>Unfortunately, there are not many published studiesin the matter of integration between PLM <br/>and MES systems. But there seems to be a consensus in the most probable effects of said <br/>integration. Those being synchronization and tighter tolerances.\\</p>
<p>不幸的是，關於PLM和MES系統整合的研究並不多。但是似乎對於這種整合可能產生的影響有一致的看法。其中最明顯的是同步和更嚴格的容忍度。\\</p>
<p>As explained by D’Antonio et al. (2015), which focus on a case study involving the <br/>manufacturing of precision components for aeronautical applications, the first advantage <br/>expected by the deployment of the monitoring and control system is product quality <br/>improvement: sensors allow to detect, measure and monitor variables, events and situations <br/>that affect process performance or product quality.\\</p>
<p>正如D'Antonio等人（2015）所解釋的那樣，他們聚焦於一個涉及航空應用的精密零件製造的案例研究，監控和控制系統部署帶來的第一個預期優勢是產品質量的改善：傳感器能夠檢測、測量和監控影響過程性能或產品質量的變量、事件和情況。\\</p>
<p>One of the central problems regarding integrating PLM with any other system revolves <br/>around the ownership of information. A possible solution relies on database integration as <br/>well as the use of middleware between systems. As is written in Saaksvuori and Immonen, <br/>(2008). A reasonable objective is that information should always be updated in one place. <br/>Other systems can read information directly from the PLM databases, and if necessary, the <br/>required information can be replicated on the databases of other system, as depicted in Figure <br/>7. Although it points this out mainly from the perspective of PLM-ERP integration, it is still <br/>very valuable from the perspective of PLM-MES integration because it is an example of how <br/>the better operation can be expected by working around systems in which files of different <br/>nature are loaded into a centralized PLM-ERP system.\\</p>
<p>關於將PLM與其他系統整合的核心問題之一是信息的所有權。一種可能的解決方案是依賴數據庫集成以及在系統之間使用中間件。正如Saaksvuori和Immonen（2008）所述，一個合理的目標是信息應該始終在一個地方更新。其他系統可以直接從PLM數據庫中讀取信息，並且如果必要，所需信息可以在其他系統的數據庫中複製，如圖7所示。儘管它主要是從PLM-ERP整合的角度指出這一點，但從PLM-MES整合的角度來看，它仍然非常有價值，因為它是一個示範如何通過繞過將不同類型的文件加載到集中式PLM-ERP系統中的系統來期望更好地運行。\\</p>
<p>%加入p14.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p14.png}%插入在image資料夾下的p14.png<br/> \label{fig:p14}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 7 Diagram of PLM integration<br/>(Saaksvuori and Immonen, 2008)}%字體加黑加粗<br/>\large\textbf{圖7：PLM整合示意圖（出自Saaksvuori和Immonen，2008）}%字體加黑加粗<br/>\end{center}\\</p>
<p>The middleware would therefore be a software framework to organize and connect all the <br/>information given to the system database in a user-friendly way. This sort of application is <br/>also referred to as integration application and, as specified by Stark (2015), these applications\\</p>
<p>因此，中間件將是一個軟件框架，以用戶友好的方式組織和連接系統數據庫中提供的所有信息。這種應用程序也被稱為集成應用程序，正如Stark（2015）所指出的那樣，這些應用程序\\</p>
<p>enable exchange of product information between PLM applications (for example, between a <br/>CAD application and a CAE application). They also enable exchange of product information <br/>between PLM applications and other enterprise applications such as ERP and CRM.\\</p>
<p>使產品信息在PLM應用程序之間進行交換（例如，在CAD應用程序和CAE應用程序之間）。它們還使產品信息在PLM應用程序和其他企業應用程序（如ERP和CRM）之間進行交換。\\</p>
<p>In a very relevant fashion, this middleware line of thinking is expanded upon by (Ben <br/>Khedher et al., 2011). In their work regarding different systems architectures for the <br/>implementation of an integrated MES+PLM they describe the use of a mediation system in <br/>web service architecture. As depicted in Figure 8, the proposed architecture uses data <br/>exchange based on internet technologies to help companies, especially expanded companies, <br/>to take advantage of opportunities generated by the Web Services. The concept of "web <br/>service" means an application (program or software system) which is designed to support <br/>interoperable machine-to-machine interactions over a network, according to the definition of <br/>W3C (Ben Khedher et al., 2011).\\</p>
<p>在一個非常相關的情境下，這種中介軟件的思維方式由（Ben Khedher等，2011年）進一步擴展。在他們關於實現集成MES+PLM的不同系統架構的工作中，他們描述了在Web服務架構中使用調解系統。如圖8所示，所提出的架構使用基於互聯網技術的數據交換，幫助企業，特別是擴展型企業，利用Web服務產生的機遇。 "Web服務" 的概念意味著根據W3C的定義，設計為在網絡上支持可互操作的機器對機器交互的應用程序（程序或軟件系統）（Ben Khedher等，2011）。\\</p>
<p>%加入p15.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p15.png}%插入在image資料夾下的p15.png<br/> \label{fig:p15}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 8 Diagram of Web service architecture<br/>(Adapted from Ben Khedher et al., 2011)}%字體加黑加粗<br/>\large\textbf{圖8 Web服務架構圖（改編自Ben Khedher等人，2011）}%字體加黑加粗<br/>\end{center}\\</p>
<p>The reason this expansion is so relevant from the perspective of this work is that the Odoo<br/>software works in a similar fashion through a similar web service architecture. In theory the<br/>Odoo software could act as the middleware working through the local network or hosted in <br/>the cloud and enacting the layer of integration that was previously mentioned. \\</p>
<p>這個擴展的相關性之所以如此重要，是因為Odoo軟體通過類似的Web服務架構以類似的方式運作。理論上，Odoo軟體可以通過本地網路或託管在雲端，作為中介軟體發揮作用，實現之前提到的整合層。\\</p>
<p>\large\textbf{3.1. How would this integration look like in practical terms}%字體加黑加粗<br/>\large\textbf{3.1 在實際情況下，這種整合會是怎樣的呢？}%字體加黑加粗</p>
<p>As mentioned in CHAPTER 2 the main idea of PLM is to manage change in all processes <br/>related to the product, and it does so mainly through the use of virtualization. The word <br/>virtualization here denotes representation of item of the real world to the digital space and, <br/>as one can imagine, there are several levels of abstraction through which a real object or <br/>process can be represented. As consequence there is no exact consensus regarding PLM of <br/>how deep and/or detailed the virtual representation must be to serve its purpose.\\</p>
<p>如第2章所述，PLM的主要理念是管理與產品相關的所有過程中的變化，它主要通過虛擬化來實現。在這裡，虛擬化一詞表示將現實世界的項目表示為數字空間中的項目，正如人們可以想像的那樣，有幾個抽象層次可以用來表示現實物體或過程。因此，關於PLM的虛擬表示應該有多深入和/或詳細，以達到其目的，並不存在確切的共識。\\</p>
<p>In an ideal world that would be the lowest form of abstraction which, essentially, would <br/>come down to a digital twin as explained in the CHAPTER 2. This is a ‘1 to 1’ digital <br/>representation of every aspect of the production cycle where every part involved would have <br/>a digital representation that not only carry the physical characteristics of the item but also all <br/>its information produced over time. To this end, as explained in CHAPTER 2, MES takes a <br/>fundamental role in obtaining the real time information required for the DT even be possible.\\</p>
<p>在理想的情況下，這將是最低形式的抽象，基本上可以歸結為如第2章所解釋的數字孿生。這是生產周期的每個方面的“一對一”數字表示，參與其中的每個部分都將具有數字表示，該表示不僅具有物品的物理特性，還具有隨時間產生的所有信息。為此，正如第2章所解釋的那樣，MES在獲取DT所需的實時信息方面起著根本作用，甚至可能是可能的。\\</p>
<p>For instance, a CNC machine would have a digital 3D model for simulation as well as a <br/>fully integrated list of all the pieces it produces, data regarding its current level of production, <br/>the current wear of its mechanical pieces, all other machines it relates to, history of all the <br/>alterations and improvements by which it was affected and many other aspects, all well <br/>packaged in an intuitive graphical user interface (GUI) that allows for maximum interaction.\\</p>
<p>例如，一台CNC機器將具有用於模擬的數字3D模型，以及所有其生產的零件的完全集成列表，有關其當前生產水平的數據，機械部件的當前磨損情況，以及它相關的所有其他機器，所有對其進行的所有更改和改進的歷史記錄以及許多其他方面的數據，全部以直觀的圖形用戶界面（GUI）打包，允許最大程度的互動。\\</p>
<p>Those are:\\</p>
<p>這些是：\\</p>
<p>▪ The means of virtualization – What sort of information is used to build the virtual <br/>items. This includes the metadata and files that are directly attached to the item. In an <br/>ideal fashion this would contain all possible information available about the item. \\</p>
<p>▪ 擬化手段 - 用於構建虛擬項目的信息類型。這包括直接附加到項目的元數據和文件。在理想情況下，這將包含有關項目的所有可能信息。\\</p>
<p>▪ The means of data input - How this information is being loaded and organized. Ideally<br/>this information would be loaded into the system as automatically as possible, be it <br/>by means of MES during quality control or through the use of automated input tools <br/>like bar code scanners.\\</p>
<p>▪數據輸入手段 - 這些信息是如何被加載和組織的。理想情況下，這些信息應該盡可能地自動加載到系統中，無論是通過質量控制時MES的手段，還是通過條碼掃描器等自動輸入工具的使用。\\</p>
<p>▪ The means of access – How this information is presented to the users. Although more <br/>subjective than the previous aspects this is incredibly important to the way the system <br/>is interacted with. How intuitive it is the information availability plays right into the <br/>core strengths of PLM. Afterall, everything would be for nothing (even if all else <br/>would be perfect) if the only way to interact with the system were a command line <br/>interface that would make difficult for the end users to access the information. \\</p>
<p>▪存取手段 - 這些信息如何呈現給用戶。雖然比前面的方面更主觀，但這對系統的互動方式非常重要。信息可用性的直觀程度恰好體現了PLM的核心優勢。畢竟，如果與系統互動的唯一方式是一個使最終用戶難以訪問信息的命令行界面，那麼一切都將化為烏有（即使其他一切都完美）。\\</p>
<p>▪ The means of integration - How items and their contained information can interact <br/>and benefit from one another, i.e., the integration with other systems and key <br/>softwares. E.g., if an item has access to a cad file, there should be no need to fill in <br/>the metadata fields by hand. Hoe items can automatically affect other items also plays <br/>into this aspect.\\</p>
<p>▪整合手段 - 項目及其包含的信息如何互動並從彼此中受益，即與其他系統和關鍵軟件的集成。例如，如果一個項目可以訪問CAD文件，就不需要手動填寫元數據字段。項目如何自動影響其他項目也涉及到這一方面。\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{4. CHAPTER}%字體加黑加粗<br/>\large\textbf{第4章}%字體加黑加粗<br/>\end{center}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{INTRODUCTION TO THE COMPANY AND PRODUCT}%字體加黑加粗<br/>\large\textbf{公司和產品介紹}%字體加黑加粗<br/>\end{center}\\</p>
<p>As one can imagine, one of the unique aspects of this work is its focus in one specific <br/>software solution that tend to be quite flexible in terms of ease of implementation to different<br/>sorts of business. This is contrary to most use cases regarding PLM implementation where <br/>the business case is the constant and the system is built around it. Nonetheless, in order to <br/>evaluate Odoo as a PLM+MES tool, it is important to consider an example. The advantage <br/>here is that a fictional company can be picked for this end maximizing the perceived effect <br/>of the software during a simulation.\\</p>
<p>作為人們可以想像的，這項工作的一個獨特之處在於，它專注於一個特定的軟體解決方案，這個解決方案在易於實施到不同類型的企業方面通常非常靈活。這與大多數關於PLM實施的用例相反，其中業務案例是固定的，系統是圍繞其構建的。然而，為了評估Odoo作為PLM+MES工具，考慮一個例子是很重要的。優勢在於，可以選擇一家虛構公司來進行模擬，從而最大程度地提高軟體的感知效果。\\</p>
<p>It is considering all those previously mentioned systems that, for the sake of <br/>exemplification, the theoretical company was organized in the molds of Industry 4.0. This <br/>company is a recently founded small case manufacturing company that uses plastic injection <br/>molding as their primary mean of production and uses additive manufacturing and fast <br/>prototyping as part of their business strategy. As explained in chapter 2 those are great <br/>examples of the path that industry is taking regarding innovation where mass production is <br/>becoming slowly less important than product variety and time to market.\\</p>
<p>考慮到所有先前提到的系統，出於示例化的目的，這家理論上的公司是按照工業4.0的模式組織的。這家公司是一家最近成立的小型製造公司，以塑膠射出成型作為主要生產手段，並將增材製造和快速原型製作作為其業務策略的一部分。正如第2章所解釋的，這些都是行業創新路徑的很好例子，其中大規模生產變得越來越不重要，產品多樣性和上市時間變得更加重要。\\</p>
<p>In order to maximize the tracking of change, most of its business are based on lower <br/>production batches on mainly automated machinery. This company focus in the production <br/>of injected plastic products and rely heavily in flexible machinery for setting production and <br/>prototyping. Having that in mind, it should be simple enough to simulate continuous <br/>improvement of both product and process to the extent of the evaluated software. Since this<br/>sort of everchanging production is extremely dependent on information management of all <br/>kinds, it must prove to be a perfect base for applied PLM+MES. \\</p>
<p>為了最大程度地追蹤變化，其大多數業務都基於主要是自動化機械的較低生產批次。該公司專注於注塑塑料產品的生產，並且在設置生產和原型製作方面非常依賴靈活的機械。有了這個想法，應該足夠簡單地模擬產品和流程的持續改進，以評估的軟體程度。由於這種不斷變化的生產極其依賴各種信息的管理，因此它必須證明是應用PLM+MES的完美基礎。\\</p>
<p>In this example the company has already implemented, since its recent foundation, the <br/>Odoo software and has taken all the necessary training and steps to its proper use. This allow<br/>the removal of the boundaries and limitations that are so common regarding implementation <br/>of the PLM+MES system to an already existing business, i.e., dependences on legacy systems <br/>administrative resistance to change or integration to old procedures. These are obviously<br/>important, but it is not within the scope of this work.\\</p>
<p>在這個例子中，公司自成立以來就已經實施了Odoo軟體，並採取了所有必要的培訓和步驟來正確使用它。這樣一來，就可以消除對於將PLM+MES系統實施到已經存在的業務中常見的界限和限制，例如對遺留系統的依賴、管理對變革的抵制或對舊程序的整合。這些顯然很重要，但不在本工作的範圍之內。\\</p>
<p>The company aims to produce a completely new product by the end of the year. After <br/>doing so, the company improved the process of production for said product. Once there is <br/>the need for product improvement, said improvement was performed as well.\\</p>
<p>該公司的目標是在年底之前生產一個全新的產品。完成後，公司改進了該產品的生產過程。一旦需要產品改進，也會進行該改進。\\</p>
<p>The following diagram (Figure 9) will be taken into consideration as the path of product <br/>development and improvement:\\</p>
<p>接下來的圖表（圖9）將被視為產品開發和改進的路徑。\\</p>
<p>%加入p19.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p19.png}%插入在image資料夾下的p19.png<br/> \label{fig:p19}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 9 Development diagram}%字體加黑加粗<br/>\large\textbf{圖9 發展流程圖}%字體加黑加粗<br/>\end{center}\\</p>
<p>This path aims to transmit to the reader an iterative approach towards development and <br/>improvement. The idea is followed by a product design for which a cycle of prototyping and <br/>redesign takes effect until satisfactory result is achieved. Then a similar cycle takes place <br/>regarding the production process. At the end of this stage initial development is done and the<br/>actual production can begin.\\</p>
<p>這條路徑旨在向讀者傳達一種對開發和改進的迭代方法。這個想法是跟隨產品設計，其中原型和重新設計的循環直到達到滿意的結果為止。然後，類似的週期在生產過程中也會發生。在這個階段結束時，初始開發完成，實際生產可以開始。\\</p>
<p>It is at this point that ways of stablishing the continuous improvement is important. In the <br/>case of this company, we are only considering two main types of upgrade paths, those being, <br/>product upgrade and process upgrade respectively.\\</p>
<p>在這一點上，建立持續改進的方法就變得重要了。在這家公司的情況下，我們僅考慮兩種主要的升級途徑，分別是產品升級和過程升級。\\</p>
<p>\large\textbf{4.1.The products and processes}%字體加黑加粗<br/>\large\textbf{4.1 產品和流程}%字體加黑加粗</p>
<p>Change and effect are the focus of the PLM+MES implementation as such the subject of <br/>said change would ideally be something that could afford a reasonable amount of freedom of <br/>design. Although the effects of a well implemented PLM+MES should be substantial even <br/>in rigid manufacturing environments, where the change is extremely limited, the system will <br/>produce much more perceivable change in an enterprise that thrives in innovation because <br/>there will be more opportunities to improve the system and gain feedback.\\</p>
<p>變化和影響是PLM+MES實施的焦點，因此理想情況下，變化的主題應該是能夠提供合理程度的設計自由度。儘管在嚴格的製造環境中，變化非常有限，一個良好實施的PLM+MES的影響應該是顯著的，但在一個擅長創新的企業中，系統將會產生更加明顯的變化，因為那裡將有更多改進系統和獲得反饋的機會。\\</p>
<p>From the perspective of improvement, if you compare a product that is a result from sheet <br/>metal stamping (Figure 10) to an equivalent product that is the result of a CNC milling <br/>procedure (Figure 11) it is easy to perceive that the CNC milled product is more welcoming \\</p>
<p>從改進的角度來看，如果你將一個由金屬板沖壓製成的產品（見圖10）與一個相等的由CNC銑削過程製成的產品（見圖11）進行比較，可以很容易地感覺到CNC銑削產品更受歡迎。\\</p>
<p>to upgrades. While the stamping is low cost (by comparison) it depends on heavy high <br/>precision metal dyes that are extremely expensive to produce. This means that the cost of <br/>enacting change to it is much higher and thus the effect of a system that thrives on tracking <br/>change becomes limited.\\</p>
<p>對於升級來說。儘管沖壓成本較低（相對而言），但它依賴於昂貴的高精度金屬模具，這些模具的生產成本非常昂貴。這意味著對其進行變更的成本要高得多，因此，對於追蹤變更的系統的影響變得有限。\\</p>
<p>%加入p20-1.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p20-1.png}%插入在image資料夾下的p20-1.png<br/> \label{fig:p20-1}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 10 Example of stamped AK74 pattern rifle receiver(Brownnells.com)}%字體加黑加粗<br/>\large\textbf{圖10：AK74型槍機的沖壓槍機示例（來源：Brownnells.com）}%字體加黑加粗<br/>\end{center}\\</p>
<p>%加入p20-2.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p20-2.png}%插入在image資料夾下的p20-2.png<br/> \label{fig:p20-2}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 11 Example of milled AK74 pattern rifle receiver(sharpsbros.com)}%字體加黑加粗<br/>\large\textbf{圖11：AK74型槍機的銑削槍機示例}%字體加黑加粗<br/>\end{center}\\</p>
<p>In the case of this fictional company, it has been determined that the best way to exemplify <br/>the PLM+MES effects would be to have products designed around plastic injection molding. <br/>It might seem unintuitive at first to consider this manufacturing procedure, like the stamping <br/>procedure previously described, since it too depends on high precision molds during <br/>production. However, the main differences between the two is regarding ease of prototyping<br/>and the cost of upgrading. \\</p>
<p>在這個虛構公司的情況下，已經確定了展示PLM+MES效果的最佳方式是設計圍繞注塑成型的產品。乍一看，考慮到這種製造過程可能看起來有些不合常理，就像之前描述的沖壓過程一樣，因為它在生產過程中也依賴於高精度的模具。然而，這兩者之間的主要區別在於原型製作的便利性和升級的成本。\\</p>
<p>Injection molding is a broad and complex field of engineering that involves a huge variety <br/>of materials and methods, little of which is of the concern of this work. It is however relevant <br/>to point out that for the most part, the pressures involved in the injection molding are one<br/>order of magnitude lower than the when we are dealing with steel; softer materials can be\\</p>
<p>注塑成型是一個廣泛而複雜的工程領域，涉及大量的材料和方法，其中很少是這項工作關注的範圍。然而，值得指出的是，注塑成型所涉及的壓力大部分情況下比我們處理鋼材時低一個數量級；較軟的材料可以\\</p>
<p>used on their molds like CNC milled aluminum. At the same time, new advancements in the <br/>field of additive manufacturing have made possible to prototype plastic parts with much <br/>closer physical characteristics to the end result of a injected piece. Sometimes even prototype <br/>molds (Figure 12) can be used for a lower volume test runs during process upgrades. \\</p>
<p>與此同時，增材製造領域的新進展已經使得能夠使用更接近注塑成型最終產品的物理特性的塑料零件進行原型製作。有時甚至可以使用原型模具（見圖12）進行低容量的測試生產，用於流程升級。\\</p>
<p>%加入p21.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p21.png}%插入在image資料夾下的p21.png<br/> \label{fig:p21}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 12 Example of injection mold made using a 3D printer(thefabricator.com)}%字體加黑加粗<br/>\large\textbf{圖12：使用3D打印機製作的注塑模具示例}%字體加黑加粗<br/>\end{center}\\</p>
<p>Additive manufacturing has become an incredible tool for ultra-flexible production. This <br/>mindset of continuous improvement, especially when regarding prototyping and iterative <br/>design, is a hallmark of the lean mentality that is so relevant in the modern industry.\\</p>
<p>增材製造已成為超靈活生產的不可或缺的工具。這種持續改進的思維，特別是在原型製作和迭代設計方面，是現代工業中非常重要的精益思維的典範。\\</p>
<p>As mentioned in the previous section, in this case study it is considered the creation of a <br/>new product and its production process by the fictional company. This product consists in a <br/>plastic small form factor computer case, composed of 3 different parts (Figure 13) that are <br/>expected to be designed and prototyped considering combination of additive manufacturing<br/>and CNC milling towards a plastic injection molding production. \\</p>
<p>如前一節所述，在這個案例研究中，考慮到虛構公司將創建一個新產品及其生產過程。這個產品是一個由3個不同部分組成的塑料小型電腦機殼（見圖13），預計將採用增材製造和CNC銑削的組合進行設計和原型製作，以便進行塑料注塑成型生產。\\</p>
<p>%加入p22.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p22.png}%插入在image資料夾下的p22.png<br/> \label{fig:p22}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 13 3D exploded view of the theoretical product}%字體加黑加粗<br/>\large\textbf{圖13：理論產品的3D爆炸視圖}%字體加黑加粗<br/>\end{center}\\</p>
<p>\large\textbf{4.1.1. Part A}%字體加黑加粗<br/>\large\textbf{4.1.1. 零件A}%字體加黑加粗</p>
<p>PART-A (Figure 14) is the core structure of the computer case. It is expected to comport <br/>all the pieces necessary for the proper function of the small form factor computer in question. <br/>To this end a raw material A was selected to be Acrylonitrile Butadiene Styrene (ABS) this <br/>is an opaque thermoplastic polymer and an engineering grade plastic. It is commonly used to <br/>produce electronic parts such as phone adaptors, keyboard keys and wall socket plastic <br/>guards.\\</p>
<p>PART-A（圖14）是電腦機殼的核心結構。預計它將包含所有必要的零件，以確保所討論的小型電腦的正常運行。為此，選擇了原料A為丙烯腈丁二烯苯乙烯（ABS），這是一種不透明的熱塑性聚合物和一種工程級塑料。它通常用於生產電子零件，如手機適配器、鍵盤鍵和牆壁插座的塑料保護罩。\\</p>
<p>%加入p23.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p23.png}%插入在image資料夾下的p23.png<br/> \label{fig:p23}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 14 Isometric view of Part A}%字體加黑加粗<br/>\large\textbf{圖14：部件A的等角視圖}%字體加黑加粗<br/>\end{center}\\</p>
<p>The main reasons for choosing this material specifically are its toughness, its good <br/>dimensional stability (resistance to change dimensions after cooling), its high impact <br/>resistance and surface hardness. Finally, it is also commonly available in the form of 3D <br/>printing filament for extrusion 3D printers which should prove to be quite useful during <br/>prototyping.\\</p>
<p>選擇這種材料的主要原因是它的耐用性、良好的尺寸穩定性（冷卻後尺寸變化的抵抗力）、高衝擊抗性和表面硬度。最後，它也常見於3D打印填料的形式，用於擠出式3D打印機，這在原型製作過程中應該非常有用。\\</p>
<p>\large\textbf{4.1.2. Parts B and C}%字體加黑加粗<br/>\large\textbf{4.1.2. 零件B和C}%字體加黑加粗</p>
<p>Parts B and C are lids that should snap into place, closing the system. These are very <br/>simple pieces and require a certain level of elasticity so it can deform to assure a screwless <br/>assembly. These two identical parts are going to be made with Thermoplastic Polyurethane<br/>(TPU), because of its elastic nature and great tensile and tear strength. This sort of polymer <br/>is often used to produce parts that demand a rubber-like elasticity. TPU performs well at high <br/>temperatures and is commonly used in power tools, cable insulations and sporting goods.<br/>Finally, TPU is also available in the form of filament for 3D printers which, for the<br/>simulation, will be used for prototyping. \\</p>
<p>零件B和C是應該能夠彈入到位，封閉系統的蓋子。這些是非常簡單的零件，需要一定程度的彈性，以便它們可以變形，確保無需螺絲即可組裝。這兩個相同的零件將使用聚氨酯熱塑性彈性體（TPU）製成，因為它具有彈性且具有極高的拉伸和撕裂強度。這種類型的聚合物通常用於生產需要橡膠般彈性的零件。TPU在高溫下表現良好，通常用於電動工具、電纜絕緣和運動用品。<br/>最後，TPU也可以以3D打印機的填料形式提供，因此在模擬中，將用於原型製作。\\</p>
<p>%加入p24.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p24.png}%插入在image資料夾下的p24.png<br/> \label{fig:p24}<br/>\end{figure}\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Figure 15 Parts B and C}%字體加黑加粗<br/>\large\textbf{圖15 零件B和C}%字體加黑加粗<br/>\end{center}\\</p>
<p>\large\textbf{4.1.3. Molds}%字體加黑加粗<br/>\large\textbf{4.1.3. 模具}%字體加黑加粗</p>
<p>Ideally all molds should be made of steel, for longevity of the mold and product quality. <br/>That being said, the injected plastics that are being selected for all parts are not so pressure <br/>dependent and their forms are not so complex, so it is assumed that aluminum molds made <br/>with a precision CNC machining should suffice to produce said parts.\\</p>
<p>理想情況下，所有模具都應該由鋼製成，以保證模具的壽命和產品質量。儘管如此，所選擇的所有零件的注塑塑料並不那麼依賴壓力，它們的形式也不那麼複雜，因此可以假設，使用精密的CNC加工製造的鋁模具應該足以生產這些零件。\\</p>
<p>It is also assumed that all molds are simple enough to be prototyped using 3D printing. <br/>Although this is not always true, it was determined representative enough for this simulation. <br/>The type of material used in those prototypes is high temperature resign cured using an SLA <br/>3DPrinter. Additionally, the mold will be considered the main physical aspect to be <br/>developed when regarding the production process because it something that directly affects <br/>the production as well as something that can be produced in house and tracked as a product <br/>would.\\</p>
<p>還假設所有的模具都足夠簡單，可以使用3D打印進行原型製作。儘管這並不總是真實的，但已經確定對於這個模擬來說具有代表性。這些原型使用高溫樹脂通過SLA 3D打印機固化。此外，模具將被視為在生產過程中需要開發的主要實物方面，因為它直接影響著生產，而且可以在內部生產並像產品一樣進行追蹤。\\</p>
<p>\large\textbf{4.2.What is analized during the simulation}%字體加黑加粗<br/>\large\textbf{4.2 模擬期間分析的內容}%字體加黑加粗</p>
<p>Taking into consideration the diagram, shown in Figure 9, as well as the main aspects of <br/>a successful integration of PLM and MES as described in the section 3.1, this experiment <br/>aims to produce commentary regarding the following relevant questions in Table 1.\\</p>
<p>\begin{center}%文字置中<br/>\large\textbf{Table 1 Summary of questions to be answered}%字體加黑加粗<br/>\large\textbf{表1 回答問題摘要}%字體加黑加粗<br/>\end{center}\\</p>
<p>%加入p25.png的圖片<br/>\begin{figure}[htbp]<br/> \centering %圖片置中<br/> \includegraphics[]{../image/p25.png}%插入在image資料夾下的p25.png<br/> \label{fig:p25}<br/>\end{figure}\\</p>
<p></p>
<h1>影片上字幕作業</h1>
<p><img alt="" height="231" src="/images/001.png" width="324"/></p>
<p><img alt="" height="237" src="/images/002.png" width="299"/></p>
<p></p>
<h1>期中作業</h1>
<p><a href="/downloads/期中影片.mp4">/downloads/期中影片.mp4</a></p>
<p></p>
<h1>NX零件圖</h1>
<p>圖2</p>
<p></p>
<p></p>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p></p>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>